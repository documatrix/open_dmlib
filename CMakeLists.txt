### CMakeLists automatically created with AutoVala
### Do not edit

project (open_dmlib)
cmake_minimum_required (VERSION 2.6)
cmake_policy (VERSION 2.8)
list (APPEND CMAKE_MODULE_PATH ${CMAKE_SOURCE_DIR}/cmake)
option(ICON_UPDATE "Update the icon cache after installing" ON)
option(BUILD_VALADOC "Build API documentation if Valadoc is available" OFF)

set( OPEN_DMLIB_MAJOR 1 )
set( OPEN_DMLIB_MINOR 0 )
set( OPEN_DMLIB_RELEASE 0 )
set( OPEN_DMLIB_NAME open_dmlib-${OPEN_DMLIB_MAJOR}.${OPEN_DMLIB_MINOR} )
set( OPEN_DMLIB_VERSION ${OPEN_DMLIB_MAJOR}.${OPEN_DMLIB_MINOR}.${OPEN_DMLIB_RELEASE} )

set(HAVE_VALADOC OFF)
if(BUILD_VALADOC)
	find_package(Valadoc)
	if(VALADOC_FOUND)
		set(HAVE_VALADOC ON)
		include(Valadoc)
	else()
		message("Valadoc not found, will not build documentation")
	endif()
endif()

find_package(PkgConfig)

set (MODULES_TO_CHECK glib-2.0 dmtestlib-1.0 gobject-2.0 gio-2.0 gthread-2.0 zlib)
if(${CMAKE_SYSTEM_NAME} STREQUAL Emscripten)
  set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY BOTH)
else( )
  set ( MODULES_TO_CHECK ${MODULES_TO_CHECK} MagickWand )
endif( )
if ( NOT ${CMAKE_SYSTEM_NAME} STREQUAL Windows AND NOT ${CMAKE_SYSTEM_NAME} STREQUAL Emscripten )
  find_library( GUDEV gudev-1.0 )
  if( NOT GUDEV )
    message( WARNING "Library gudev-1.0 not found! Will compile without gudev-1.0!" )
  else( )
    message( STATUS "Library gudev-1.0 found!" )
    set ( MODULES_TO_CHECK ${MODULES_TO_CHECK} gudev-1.0 )
  endif( )
endif( )
pkg_check_modules( DEPS REQUIRED ${MODULES_TO_CHECK} )


set( LIBS )
foreach( PKGLIB ${DEPS_LIBRARIES} )
  find_library( _LIB_${PKGLIB} ${PKGLIB} PATHS ${DEPS_LIBRARY_DIRS})
  list( APPEND LIBS ${_LIB_${PKGLIB}} )
endforeach( PKGLIB )

add_definitions (${DEPS_CFLAGS})
link_directories ( ${DEPS_LIBRARY_DIRS} )
link_libraries ( ${LIBS} )

set( VAPIDIRS_ARGS "" )
if( NOT ${VAPIDIRS} STREQUAL "" )
  string( REPLACE ":" ";" VAPIDIRS_LIST ${VAPIDIRS} )
  foreach ( VAPIDIR ${VAPIDIRS_LIST} )
    set( VAPIDIRS_ARGS ${VAPIDIRS_ARGS} "--vapidir=${VAPIDIR}" )
  endforeach ( VAPIDIR )
endif()

add_subdirectory(src)
add_subdirectory(tests)
add_subdirectory(doc)
